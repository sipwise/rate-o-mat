{
  "comments": [
    {
      "key": {
        "uuid": "dab895d6_744b85b0",
        "filename": "t/rateomat-99-add_interval.t",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2017-11-07T20:03:03Z",
      "side": 1,
      "message": "well.. so this means returning an empty list implicitly.\nfor construct like\nmy $blah \u003d {\n  foo \u003d\u003e to_epoch($x),\n  bar \u003d\u003e 123,\n  ...\n};\nit\u0027s not obvious but also it\u0027 using list context, so\n\"return;\" will swallow the value for \"foo\" key. i use\nexactly this pattern to consturct hashes often, that\u0027s\nwhy i\u0027m more on \"return undef;\" sinde.\naside, with subs showing several return path\u0027s i usually\ntry to stick with same type (like scalar for this one).",
      "revId": "007dc9f802daafc211582783ffd3562a1f46f5da",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_b4cc3d37",
        "filename": "t/rateomat-99-add_interval.t",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2017-11-07T21:13:05Z",
      "side": 1,
      "message": "True, the problem with returning an explicit undef is described here: https://metacpan.org/pod/Perl::Critic::Policy::Subroutines::ProhibitExplicitReturnUndef\n\nI think the policy is nice, because you can always force scalar context (with scalar for example). And it gives us consistent coding style.",
      "parentUuid": "dab895d6_744b85b0",
      "revId": "007dc9f802daafc211582783ffd3562a1f46f5da",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_32775dd6",
        "filename": "t/rateomat-99-add_interval.t",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2017-11-09T07:31:14Z",
      "side": 1,
      "message": "imo, both arguments make sense. anyway, however we do it, when we change this, we need to check for implications, since this can change behavior elsewhere",
      "parentUuid": "dab895d6_b4cc3d37",
      "revId": "007dc9f802daafc211582783ffd3562a1f46f5da",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_0d26b8b7",
        "filename": "t/rateomat-99-add_interval.t",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2017-11-09T08:22:11Z",
      "side": 1,
      "message": "But this is a test, so we should notice degradation immediately if any? Isn\u0027t it?",
      "parentUuid": "dab895d6_32775dd6",
      "revId": "007dc9f802daafc211582783ffd3562a1f46f5da",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_4d37d0e3",
        "filename": "t/rateomat-99-add_interval.t",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000005
      },
      "writtenOn": "2017-11-09T08:50:17Z",
      "side": 1,
      "message": "true. I mostly meant the change to \"return undef\" in general",
      "parentUuid": "dab895d6_0d26b8b7",
      "revId": "007dc9f802daafc211582783ffd3562a1f46f5da",
      "serverId": "85315e57-5f03-49c3-83f8-201ae2313a75",
      "unresolved": false
    }
  ]
}